h63087
s 00003/00001/00045
d D 1.3 00/12/11 16:12:50 staelin 4 3
c - Add new relevant entries to "SEE ALSO" section
cC
cK12000
e
s 00004/00004/00042
d D 1.2 00/12/11 15:50:44 staelin 3 2
c - Add information to "SEE ALSO" section
cC
cHhpli8.hpli.hpl.hp.com
cK64802
cZ+02:00
e
s 00046/00000/00000
d D 1.1 94/11/18 01:26:35 lm 2 1
c Initial revision
cC
cK65071
e
s 00000/00000/00000
d D 1.0 94/11/18 01:26:34 lm 1 0
cBlm@lm.bitmover.com|ChangeSet|20000131225335|47351|--LMBENCH--
cHlm.bitmover.com
cK03775
cPdoc/lat_rpc.8
cR6edcc5c54c822c39
cV4
cX0x21
cZ-08:00
e
u
U
f e 0
f x 0x21
t
lmbench doc checkin
T
I 2
.\" $Id$
.TH LAT_RPC 8 "$Date$" "(c)1994 Larry McVoy" "LMBENCH"
.SH NAME
lat_rpc \- measure interprocess communication latency via Sun RPC
.SH SYNOPSIS
.B lat_rpc
.I -s
.sp .5
.B lat_rpc
.I hostname [udp|tcp]
.sp .5
.B lat_rpc
.I -hostname
.SH DESCRIPTION
.B lat_rpc
is a client/server program that measures interprocess
communication latencies.  The benchmark passes a token back and forth between
the two processes (this sort of benchmark is frequently referred to as a
``hot potato'' benchmark).  No other work is done in the processes.
D 3
.LP
E 3
I 3
.PP
E 3
This benchmark may be compared to the TCP and UDP forms of the same benchmark
to accurately see the cost of using RPC versus the cost of using plain 
old TCP or UDP sockets.  It is worth noting that the RPC form is passing
back and forth a single byte, not some long complicated record.
D 3
.LP
E 3
I 3
.PP
E 3
.B lat_rpc
has three forms of usage: as a server (-s), as a client (lat_rpc localhost), and
as a shutdown (lat_rpc -localhost).
D 3
.LP
E 3
I 3
.P
E 3
The client form may specify the protocol over which the RPCs are performed.
The default is ``udp''.
.SH OUTPUT
The reported time is in microseconds per round trip and includes the total
D 3
time, i.e., the context switching overhead is includeded.
E 3
I 3
time, i.e., the context switching overhead is included.
E 3
Output format is like so
.sp
.ft CB
RPC/udp latency using localhost: 1344 microseconds
.br
RPC/tcp latency using localhost: 2089 microseconds
.ft
.SH ACKNOWLEDGEMENT
Funding for the development of
this tool was provided by Sun Microsystems Computer Corporation.
.SH "SEE ALSO"
D 4
lmbench(8).
E 4
I 4
lmbench(8), svcudp_create(3), svctcp_create(3), svc_register(3),
svc_run(3), svc_sendreply(3), svc_freeargs(3), clnt_create(3),
clnt_control(3), clnt_call(3).
E 4
E 2
I 1
E 1
