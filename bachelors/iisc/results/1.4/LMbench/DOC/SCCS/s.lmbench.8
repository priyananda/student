h03424
s 00036/00012/00089
d D 1.4 00/12/11 15:53:47 staelin 5 4
c - Major rewrite of man pages
cC
cHhpli8.hpli.hpl.hp.com
cK06596
cZ+02:00
e
s 00003/00000/00098
d D 1.3 94/11/23 18:01:10 lm 4 3
c upating to include pagefault.
cC
cK04232
e
s 00004/00001/00094
d D 1.2 94/11/23 17:20:56 lm 3 2
c add some stuff.
cK63779
e
s 00095/00000/00000
d D 1.1 94/11/18 01:26:35 lm 2 1
c Initial revision
cK59737
e
s 00000/00000/00000
d D 1.0 94/11/18 01:26:34 lm 1 0
cBlm@lm.bitmover.com|ChangeSet|20000131225335|47351|--LMBENCH--
cHlm.bitmover.com
cK03763
cPdoc/lmbench.8
cRd3dc7cbc3d593fd1
cV4
cX0x21
cZ-08:00
e
u
U
f e 0
f x 0x21
t
lmbench doc checkin
T
I 2
.\" $Id$
.TH LMBENCH 8 "$Date$" "(c)1994 Larry McVoy" "LMBENCH"
.SH NAME
lmbench \- system benchmarks
.SH DESCRIPTION
.B lmbench
is a series of micro benchmarks intended to measure basic operating
system and hardware system metrics.  The benchmarks fall into three
general classes: bandwidth, latency, and ``other''.
.SH BANDWIDTH MEASUREMENTS
Data movement is fundemental to the performance on most computer systems.
The bandwidth measurements are intended to show how the system can move
data.  The results of the bandwidth metrics can be compared but care
must be taken to understand what it is that is being compared.  The
bandwidth benchmarks can be reduced to two main components: operating
system overhead and memory speeds.  The bandwidth benchmarks report
their results as megabytes moved per second but please note that the
data moved is \fBnot\fP necessarily the same as the memory bandwidth 
used to move the data.  Consult the individual man pages for more 
information.
D 5
.LP
E 5
I 5
.P
E 5
Each of the bandwidth benchmarks is listed below with a brief overview of the 
intent of the benchmark.
.TP 14
bw_file_rd
reading and summing of a file via the read(2) interface.
.TP 
D 5
bw_mem_cp
memory copy.
.TP
bw_mem_rd
memory reading and summing.
.TP
bw_mem_wr
memory writing.
E 5
I 5
bw_mem
memory bandwidth (read, write, copy).
E 5
.TP
bw_mmap_rd
reading and summing of a file via the memory mapping mmap(2) interface.
.TP
bw_pipe
D 5
reading of data via a pipe.
E 5
I 5
copying data via a pipe.
.TP
bw_unix
copying data via a Unix socket.
E 5
.TP
bw_tcp
reading of data via a TCP/IP socket.
.SH LATENCY MEASUREMENTS
Control messages are also fundemental to the performance on most
computer systems.  The latency measurements are intended to show how fast
a system can be told to do some operation.  The results of the 
latency metrics can be compared to each other
for the most part.  In particular, the
pipe, rpc, tcp, and udp transactions are all identical benchmarks 
carried out over different system abstractions.
D 5
.LP
E 5
I 5
.P
E 5
Latency numbers here should mostly be in microseconds per operation.
.TP 14
lat_connect
the time it takes to establish a TCP/IP connection.
D 3
.TP 14
E 3
I 3
.TP 
I 5
lat_connect_unix
the time it takes to establish a Unix connection.
.TP 
E 5
E 3
lat_ctx
context switching; the number and size of processes is varied.
I 3
.TP 
lat_fs
creating and deleting small files.
I 4
.TP 
lat_pagefault
the time it takes to fault in a page from a file.
E 4
E 3
.TP
lat_mem_rd
memory read latency (accurate to the ~2-5 nanosecond range,
reported in nanoseconds).
.TP
lat_mmap
time to set up a memory mapping.
.TP
lat_pipe
``hot potato'' transaction through a Unix pipe.
.TP
lat_proc
process creation times (various sorts).
.TP
lat_rpc
``hot potato'' transaction through Sun RPC over UDP or TCP.
.TP
lat_syscall
non trivial entry into the system.
.TP
lat_tcp
``hot potato'' transaction through TCP.
.TP
lat_udp
``hot potato'' transaction through UDP.
.SH OTHER MEASUREMENTS
.TP 14
mhz
D 5
processor cycle time
E 5
I 5
processor cycle time.
.TP
disk
seek latencies and zone bandwidths.
.TP
clock
timing subsystem parameters.
.TP
enough
timing interval duration required for accurate timing results.
.TP
timing_o
overhead incurred by gettimeofday() to measure timing intervals.
.TP
loop_o
for() loop overhead.
E 5
.SH ACKNOWLEDGEMENT
Funding for the development of these tools was provided by Sun
Microsystems Computer Corporation.
.SH COPYING
The benchmarking code is distributed under the GPL with additional 
restrictions, see the COPYING file.
I 5
.SH "SEE ALSO"
lmbench(3), timing(3), results(3), reporting(3), 
bargraph(1), graph(1), pgraph(1),
disk(8), clock(8), enough(8), timing_o(8), loop_o(8),
bw_file_rd(8), bw_mem(8), bw_mmap_rd(8), bw_pipe(8), bw_unix(8),
lat_connect(8), lat_ctx(8), lat_fcntl(8), lat_fifo(8), lat_fs(8),
lat_http(8), lat_mem_rd(8), lat_mmap(8), lat_pagefault(8),
lat_pipe(8), lat_proc(8), lat_rpc(8), lat_select(8), lat_syscall(8),
lat_tcp(8), lat_udp(8), lat_unix(8), lat_unix_connect(8).
E 5
E 2
I 1
E 1
